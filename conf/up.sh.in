#!/bin/sh

. @SYSCONFDIR@/chilli/functions

TUNTAP=$(basename $DEV)
echo $TUNTAP > $RUN_D/tunname

CHILLI_DO=$RUN_D/${TUNTAP}-do.sh
CHILLI_UNDO=$RUN_D/${TUNTAP}-undo.sh

ipt() {
        opt=$1; shift
        echo "iptables -w $opt $*" >> $CHILLI_DO 
        echo "iptables -w -D $*" >> $CHILLI_UNDO 
}

run_up() {
    if [ -n "$TUNTAP" ]
    then
	rm -f $CHILLI_DO $CHILLI_UNDO 
        # ifconfig $TUNTAP mtu $MTU
	if [ "$KNAME" != "" ]
	then
              ifconfig $TUNTAP 0.0.0.0 down
              ipset -q create passthrough hash:ip
              ipset -q flush passthrough

              ipt -A forwarding_from_lan -t mangle -m comment --comment "'Mark packets LAN->WAN with src address for tc filter'" -j IPMARK --addr=src
              ipt -A forwarding_to_lan -t mangle -m comment --comment "'Mark packets WAN->LAN with dst address for tc filter'" -j IPMARK --addr=dst
              ipt -A forwarding_from_lan -m set --match-set passthrough dst -m comment --comment "'Allow LAN->passthrough'" -j ACCEPT
              ipt -A forwarding_to_lan -m set --match-set passthrough src -m comment --comment "'Allow passthrough->LAN'" -j ACCEPT
              ipt -A forwarding_from_lan -m coova -m comment --comment "'Allow authenticated clients LAN->WAN'" -j ACCEPT
              ipt -A forwarding_to_lan -m coova --dest -m comment --comment "'Allow authenticated clients WAN->LAN'" -j ACCEPT
              ipt -A prerouting_from_lan -t nat -p tcp --dport 80 -m set ! --match-set passthrough dst -m coova ! --checkclient \
                     -m comment --comment "'Redirect port 80 for non-passthrough, non-authenticated to UAM'" -j DNAT --to $ADDR:$UAMPORT

              ipset add passthrough $ADDR
              for pt in ${HS_UAMALLOW//,/ }; do
                     if [[ $pt =~ ([0-9]+\.)+[0-9]+ ]]; then
                        ipset -q add passthrough $pt
                     else
                        for ip in $(name2ip $pt); do
                            ipset -q add passthrough $ip
                        done
                     fi
              done
	else
	    if [ "$LAYER3" != "1" ]
	    then
		ipt_in --dst $ADDR -j DROP
		
		[ -n "$UAMPORT" -a "$UAMPORT" != "0" ] && \
		    ipt_in -p tcp -m tcp --dport $UAMPORT --dst $ADDR -j ACCEPT
		
		[ -n "$UAMUIPORT" -a "$UAMUIPORT" != "0" ] && \
		    ipt_in -p tcp -m tcp --dport $UAMUIPORT --dst $ADDR -j ACCEPT
		
		[ -n "$HS_TCP_PORTS" ] && {
		    for port in $HS_TCP_PORTS; do
			ipt_in -p tcp -m tcp --dport $port --dst $ADDR -j ACCEPT
		    done
		}

		[ -n "$HS_UDP_PORTS" ] && {
		    for port in $HS_UDP_PORTS; do
			ipt_in -p udp -m udp --dport $port --dst $ADDR -j ACCEPT
		    done
		}

		ipt_in -p udp -d 255.255.255.255 --destination-port 67:68 -j ACCEPT
		ipt_in -p udp -d $ADDR --destination-port 67:68 -j ACCEPT
		ipt_in -p udp --dst $ADDR --dport 53 -j ACCEPT
		ipt_in -p icmp --dst $ADDR -j ACCEPT
		
		if [ "$ONLY8021Q" != "1" ]
		then
		    ipt -I INPUT -i $DHCPIF -j DROP
		fi
	    fi
	    
	    if [ "$ONLY8021Q" != "1" ]
	    then
		ipt -I FORWARD -i $DHCPIF -j DROP
		ipt -I FORWARD -o $DHCPIF -j DROP
	    fi
	    
	    ipt -I FORWARD -i $TUNTAP -j ACCEPT
	    ipt -I FORWARD -o $TUNTAP -j ACCEPT
	    
            # Help out conntrack to not get confused
            # (stops masquerading from working)
            #ipt -I PREROUTING -t raw -j NOTRACK -i $DHCPIF
            #ipt -I OUTPUT -t raw -j NOTRACK -o $DHCPIF
	    
            # Help out MTU issues with PPPoE or Mesh
	    ipt -I FORWARD -p tcp -m tcp --tcp-flags SYN,RST SYN -j TCPMSS --clamp-mss-to-pmtu
	    ipt -I FORWARD -t mangle -p tcp -m tcp --tcp-flags SYN,RST SYN -j TCPMSS --clamp-mss-to-pmtu
	    
	    [ "$HS_LAN_ACCESS" != "on" -a "$HS_LAN_ACCESS" != "allow" ] && \
		ipt -I FORWARD -i $TUNTAP \! -o $HS_WANIF -j DROP
	    
	    ipt -I FORWARD -i $TUNTAP -o $HS_WANIF -j ACCEPT
	    
	    [ "$HS_LOCAL_DNS" = "on" ] && \
		ipt -I PREROUTING -t nat -i $TUNTAP -p udp --dport 53 -j DNAT --to-destination $ADDR

	fi
    fi

    # site specific stuff optional
    [ -e @ETCCHILLI@/ipup.sh ] && . @ETCCHILLI@/ipup.sh
}


FLOCK=$(which flock)
if [ -n "$FLOCK" ] && [ -z "$LOCKED_FILE" ]
then
    export LOCKED_FILE=/tmp/.chilli-flock
    flock -x $LOCKED_FILE -c "$0 $@"
else
    run_up
fi
